parameters:
  - name: deployment_environments
    type: object
    default: []
  - name: terraform_project_folder_name
    type: string
    default: ""
  - name: subscription_tier
    type: string
    default: ""
  - name: stage_type
    type: string
    default: "plan"
  - name: env_mappings
    type: object
    default: 
      dv: 
        environment: Development
        agent_pool: DevelopmentPrivatePoolWin2016
        service_connection: 
          spoke_application: dev-spoke-application
          core: dev-core
          spoke_da: dev-spoke-da
        variable_groups:
          var_group: "terraform-vars-dev-spoke-application-57fad7dc"
          var_group_kvl: "terraform-vars-dev-spoke-application-57fad7dc-kvl"
      qa: 
        environment: QA
        agent_pool: QAPrivatePoolWin2016
        service_connection: 
          spoke_application: qa-spoke-application
          core: qa-core
          spoke_da: qa-spoke-da
        variable_groups:
          var_group: "terraform-vars-qa-spoke-application-96e9a7e6"
          var_group_kvl: "terraform-vars-qa-spoke-application-96e9a7e6-kvl"
      uat: 
        environment: UAT
        agent_pool: UATPrivatePoolWin2016
        service_connection: 
          spoke_application: uat-spoke-application
          core: uat-core
          spoke_da: uat-spoke-da
        variable_groups:
          var_group: "terraform-vars-uat-spoke-application-104a6d25"
          var_group_kvl: "terraform-vars-uat-spoke-application-104a6d25-kvl"
      stg: 
        environment: Staging
        agent_pool: ProdPrivatePoolWIN2016
        service_connection: 
          spoke_application: stg-spoke-application
          core: stg-core
          spoke_da: stg-spoke-da
        variable_groups:
          var_group: "terraform-vars-stg-spoke-application-0bc2885b"
          var_group_kvl: "terraform-vars-stg-spoke-application-0bc2885b-kvl"
      pd: 
        environment: Production
        agent_pool: ProdPrivatePoolWIN2016
        service_connection: 
          spoke_application: pd-spoke-application
          core: pd-core
          spoke_da: pd-spoke-da
        variable_groups:
          var_group: "terraform-vars-pd-spoke-application-5d3ae075"
          var_group_kvl: "terraform-vars-pd-spoke-application-5d3ae075-kvl"

stages:
- ${{ if eq(parameters.stage_type, 'createProjectArtifact')}}:
  - stage: 'createProjectArtifact'
    displayName: 'Create Project Artifact'
    dependsOn: []
    pool:
      name: DevelopmentPrivatePoolWin2016
    jobs:
    - template: ${{variables['System.DefaultWorkingDirectory']}}/azure-commercial/ignite/coupa/Job/tf-create-publish-coupa-artifact.yml

- ${{ if eq(parameters.stage_type, 'plan')}}:
  - ${{each environment_acronym in parameters.deployment_environments}}:
    - stage: ${{format('Validation_{0}',parameters.env_mappings[environment_acronym].environment)}}
      displayName: ${{format('Validation-{0}',parameters.env_mappings[environment_acronym].environment)}}
      dependsOn: ['createProjectArtifact']
      variables:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/${{parameters.terraform_project_folder_name}}/pipeline/env-scoped-vars-${{environment_acronym}}.yml
      - group: ${{parameters.env_mappings[environment_acronym].variable_groups.var_group}}
      - group: ${{parameters.env_mappings[environment_acronym].variable_groups.var_group_kvl}}
      pool:
        name: ${{parameters.env_mappings[environment_acronym].agent_pool}}
      jobs:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/${{parameters.terraform_project_folder_name}}/coupa/Job/tf-coupa-plan-job.yml
        parameters:
          terraform_project_folder_name: ${{parameters.terraform_project_folder_name}}
          environment_acronym: ${{environment_acronym}}
          service_connection: ${{parameters.env_mappings[environment_acronym].service_connection[parameters.subscription_tier]}}

- ${{ if eq(parameters.stage_type, 'apply')}}:
  - ${{each environment_acronym in parameters.deployment_environments}}:
    - stage: ${{parameters.env_mappings[environment_acronym].environment}}
      displayName: ${{parameters.env_mappings[environment_acronym].environment}}
      dependsOn:
      - ${{format('Validation_{0}',parameters.env_mappings[environment_acronym].environment)}}
      condition: succeeded('${{format('Validation_{0}',parameters.env_mappings[environment_acronym].environment)}}')
      variables:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/${{parameters.terraform_project_folder_name}}/pipeline/env-scoped-vars-${{environment_acronym}}.yml
      - group: ${{parameters.env_mappings[environment_acronym].variable_groups.var_group}}
      - group: ${{parameters.env_mappings[environment_acronym].variable_groups.var_group_kvl}}
      pool:
        name: ${{parameters.env_mappings[environment_acronym].agent_pool}}
      jobs:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/${{parameters.terraform_project_folder_name}}/coupa/Job/tf-coupa-apply-job.yml
        parameters:
          environment: ${{parameters.env_mappings[environment_acronym].environment}}
          environment_acronym: ${{environment_acronym}}
          terraform_project_folder_name: ${{parameters.terraform_project_folder_name}}
          agent_pool: ${{parameters.env_mappings[environment_acronym].agent_pool}}
          service_connection: ${{parameters.env_mappings[environment_acronym].service_connection[parameters.subscription_tier]}}